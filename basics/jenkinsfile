pipeline {
    agent any
    stages {
       stage('Preparation') {
          steps {
            checkout scm
            sh "git rev-parse --short HEAD > .git/commit-id"
            commit_id = readFile('.git/commit-id').trim()
          }
        }
        stage("Docker Build and SonarQube") {
            parallel {
                stage("Docker Build") {
                  steps {
                     script {
                       def app = docker.build("vijay21sarathy/docker-nodejs-demo:${commit_id}", './basics')
                     }
                  }
                }
                stage("Sonarqube") {
                  steps {
                     sh("echo 'stage sonarqube test'")
                  }
                }
            }
        }
        stage("docker build/push") {            
          steps {
             echo "Stage Docker push"
          }
        }        
    }
}
